name: Build and Deploy solution

on:
  - push

jobs:
  test-and-build:
    name: Run tests and build container
    runs-on: ubuntu-latest
    env:
      Container_BASE_URL: gcr.io
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}:${{ github.sha }}
    permissions:
      contents: read
      id-token: write
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: |
          npm run test:cov
          mv coverage/unit/coverage-final.json coverage/unit.json

      - name: Run e2e tests
        run: |
          npm run test:e2e:cov
          mv coverage/e2e/coverage-final.json coverage/e2e.json
        env:
          TYPEORM_HOST: "localhost"
          TYPEORM_USERNAME: "postgres"
          TYPEORM_PASSWORD: "postgres"
          TYPEORM_DATABASE: "postgres"
          TYPEORM_PORT: "5432"
          GCS_BUCKET: dummyBucket
          JWT_SECRET: jwtSecret

      - name: Merge coverage reports
        run : |
          npm run coverage:merge
          npm run coverage:generate

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build container
        run: docker build . -t $IMAGE_NAME

      - id: auth
        if: github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/main'
        name: Authenticate to Gcloud Account
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT}}

      - name: Configure Docker
        if: github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/main'
        run: gcloud auth configure-docker $Container_BASE_URL

      - name: Push docker image
        run: docker push $IMAGE_NAME
        if: github.ref == 'refs/heads/stage' || github.ref == 'refs/heads/main'

  deploy-stage:
    name: Build and Deploy project to stage
    needs: test-and-build
    if: github.ref == 'refs/heads/stage'
    runs-on: ubuntu-latest
    env:
      Container_BASE_URL: gcr.io
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}:${{ github.sha }}
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Gcloud Account
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT}}

      - name: Deploy docker image to cloud run
        run: gcloud run deploy ${{ secrets.GCP_SERVICE_NAME }} --image $IMAGE_NAME --quiet --platform managed --region ${{secrets.GCP_REGION}} --project ${{ secrets.GCP_PROJECT_ID }}



